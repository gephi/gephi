package org.gephi.viz.engine.jogl.util.gl.capabilities;

/**
 *
 * @author gbarbieri
 */
public class GLExtensionData {

    public boolean ARB_multitexture;
    public boolean ARB_transpose_matrix;
    public boolean ARB_multisample;
    public boolean ARB_texture_env_add;
    public boolean ARB_texture_cube_map;
    public boolean ARB_texture_compression;
    public boolean ARB_texture_border_clamp;
    public boolean ARB_point_parameters;
    public boolean ARB_vertex_blend;
    public boolean ARB_matrix_palette;
    public boolean ARB_texture_env_combine;
    public boolean ARB_texture_env_crossbar;
    public boolean ARB_texture_env_dot3;
    public boolean ARB_texture_mirrored_repeat;
    public boolean ARB_depth_texture;
    public boolean ARB_shadow;
    public boolean ARB_shadow_ambient;
    public boolean ARB_window_pos;
    public boolean ARB_vertex_program;
    public boolean ARB_fragment_program;
    public boolean ARB_vertex_buffer_object;
    public boolean ARB_occlusion_query;
    public boolean ARB_shader_objects;
    public boolean ARB_vertex_shader;
    public boolean ARB_fragment_shader;
    public boolean ARB_shading_language_100;
    public boolean ARB_texture_non_power_of_two;
    public boolean ARB_point_sprite;
    public boolean ARB_fragment_program_shadow;
    public boolean ARB_draw_buffers;
    public boolean ARB_texture_rectangle;
    public boolean ARB_color_buffer_float;
    public boolean ARB_half_float_pixel;
    public boolean ARB_texture_float;
    public boolean ARB_pixel_buffer_object;
    public boolean ARB_depth_buffer_float;
    public boolean ARB_draw_instanced;
    public boolean ARB_framebuffer_object;
    public boolean ARB_framebuffer_sRGB;
    public boolean ARB_geometry_shader4;
    public boolean ARB_half_float_vertex;
    public boolean ARB_instanced_arrays;
    public boolean ARB_map_buffer_range;
    public boolean ARB_texture_buffer_object;
    public boolean ARB_texture_compression_rgtc;
    public boolean ARB_texture_rg;
    public boolean ARB_vertex_array_object;
    public boolean ARB_uniform_buffer_object;
    public boolean ARB_compatibility;
    public boolean ARB_copy_buffer;
    public boolean ARB_shader_texture_lod;
    public boolean ARB_depth_clamp;
    public boolean ARB_draw_elements_base_vertex;
    public boolean ARB_fragment_coord_conventions;
    public boolean ARB_provoking_vertex;
    public boolean ARB_seamless_cube_map;
    public boolean ARB_sync;
    public boolean ARB_texture_multisample;
    public boolean ARB_vertex_array_bgra;
    public boolean ARB_draw_buffers_blend;
    public boolean ARB_sample_shading;
    public boolean ARB_texture_cube_map_array;
    public boolean ARB_texture_gather;
    public boolean ARB_texture_query_lod;
    public boolean ARB_shading_language_include;
    public boolean ARB_texture_compression_bptc;
    public boolean ARB_blend_func_extended;
    public boolean ARB_explicit_attrib_location;
    public boolean ARB_occlusion_query2;
    public boolean ARB_sampler_objects;
    public boolean ARB_shader_bit_encoding;
    public boolean ARB_texture_rgb10_a2ui;
    public boolean ARB_texture_swizzle;
    public boolean ARB_timer_query;
    public boolean ARB_vertex_type_2_10_10_10_rev;
    public boolean ARB_draw_indirect;
    public boolean ARB_gpu_shader5;
    public boolean ARB_gpu_shader_fp64;
    public boolean ARB_shader_subroutine;
    public boolean ARB_tessellation_shader;
    public boolean ARB_texture_buffer_object_rgb32;
    public boolean ARB_transform_feedback2;
    public boolean ARB_transform_feedback3;
    public boolean ARB_ES2_compatibility;
    public boolean ARB_get_program_binary;
    public boolean ARB_separate_shader_objects;
    public boolean ARB_shader_precision;
    public boolean ARB_vertex_attrib_64bit;
    public boolean ARB_viewport_array;
    public boolean ARB_cl_event;
    public boolean ARB_debug_output;
    public boolean ARB_robustness;
    public boolean ARB_shader_stencil_export;
    public boolean ARB_base_instance;
    public boolean ARB_shading_language_420pack;
    public boolean ARB_transform_feedback_instanced;
    public boolean ARB_compressed_texture_pixel_storage;
    public boolean ARB_conservative_depth;
    public boolean ARB_internalformat_query;
    public boolean ARB_map_buffer_alignment;
    public boolean ARB_shader_atomic_counters;
    public boolean ARB_shader_image_load_store;
    public boolean ARB_shading_language_packing;
    public boolean ARB_texture_storage;
    public boolean KHR_texture_compression_astc_hdr;
    public boolean KHR_texture_compression_astc_ldr;
    public boolean KHR_debug;
    public boolean ARB_arrays_of_arrays;
    public boolean ARB_clear_buffer_object;
    public boolean ARB_compute_shader;
    public boolean ARB_copy_image;
    public boolean ARB_texture_view;
    public boolean ARB_vertex_attrib_binding;
    public boolean ARB_robustness_isolation;
    public boolean ARB_ES3_compatibility;
    public boolean ARB_explicit_uniform_location;
    public boolean ARB_fragment_layer_viewport;
    public boolean ARB_framebuffer_no_attachments;
    public boolean ARB_internalformat_query2;
    public boolean ARB_invalidate_subdata;
    public boolean ARB_multi_draw_indirect;
    public boolean ARB_program_interface_query;
    public boolean ARB_robust_buffer_access_behavior;
    public boolean ARB_shader_image_size;
    public boolean ARB_shader_storage_buffer_object;
    public boolean ARB_stencil_texturing;
    public boolean ARB_texture_buffer_range;
    public boolean ARB_texture_query_levels;
    public boolean ARB_texture_storage_multisample;
    public boolean ARB_buffer_storage;
    public boolean ARB_clear_texture;
    public boolean ARB_enhanced_layouts;
    public boolean ARB_multi_bind;
    public boolean ARB_query_buffer_object;
    public boolean ARB_texture_mirror_clamp_to_edge;
    public boolean ARB_texture_stencil8;
    public boolean ARB_vertex_type_10f_11f_11f_rev;
    public boolean ARB_bindless_texture;
    public boolean ARB_compute_variable_group_size;
    public boolean ARB_indirect_parameters;
    public boolean ARB_seamless_cubemap_per_texture;
    public boolean ARB_shader_draw_parameters;
    public boolean ARB_shader_group_vote;
    public boolean ARB_sparse_texture;
    public boolean ARB_ES3_1_compatibility;
    public boolean ARB_clip_control;
    public boolean ARB_conditional_render_inverted;
    public boolean ARB_cull_distance;
    public boolean ARB_derivative_control;
    public boolean ARB_direct_state_access;
    public boolean ARB_get_texture_sub_image;
    public boolean ARB_shader_texture_image_samples;
    public boolean ARB_texture_barrier;
    public boolean KHR_context_flush_control;
    public boolean KHR_robust_buffer_access_behavior;
    public boolean KHR_robustness;
    public boolean ARB_pipeline_statistics_query;
    public boolean ARB_sparse_buffer;
    public boolean ARB_transform_feedback_overflow_query;

    public boolean EXT_gpu_shader4;
    public boolean EXT_texture_compression_latc;
    public boolean EXT_transform_feedback;
    public boolean EXT_direct_state_access;
    public boolean EXT_texture_filter_anisotropic;
    public boolean EXT_texture_compression_s3tc;
    public boolean EXT_texture_array;
    public boolean EXT_texture_snorm;
    public boolean EXT_texture_sRGB_decode;
    public boolean EXT_framebuffer_multisample_blit_scaled;
    public boolean EXT_shader_integer_mix;
    public boolean EXT_shader_image_load_formatted;
    public boolean EXT_polygon_offset_clamp;

    public boolean NV_explicit_multisample;
    public boolean NV_shader_buffer_load;
    public boolean NV_vertex_buffer_unified_memory;
    public boolean NV_shader_buffer_store;
    public boolean NV_bindless_multi_draw_indirect;
    public boolean NV_blend_equation_advanced;
    public boolean NV_deep_texture3D;
    public boolean NV_shader_thread_group;
    public boolean NV_shader_thread_shuffle;
    public boolean NV_shader_atomic_int64;
    public boolean NV_bindless_multi_draw_indirect_count;
    public boolean NV_uniform_buffer_unified_memory;

    public boolean ATI_texture_compression_3dc;
    public boolean AMD_depth_clamp_separate;
    public boolean AMD_stencil_operation_extended;
    public boolean AMD_vertex_shader_viewport_index;
    public boolean AMD_vertex_shader_layer;
    public boolean AMD_shader_trinary_minmax;
    public boolean AMD_interleaved_elements;
    public boolean AMD_shader_atomic_counter_ops;
    public boolean AMD_occlusion_query_event;
    public boolean AMD_shader_stencil_value_export;
    public boolean AMD_transform_feedback4;
    public boolean AMD_gpu_shader_int64;
    public boolean AMD_gcn_shader;

    public boolean INTEL_map_texture;
    public boolean INTEL_fragment_shader_ordering;
    public boolean INTEL_performance_query;

    @Override
    public String toString() {
        return "GLExtensionData{" + "ARB_multitexture=" + ARB_multitexture + ", ARB_transpose_matrix=" + ARB_transpose_matrix + ", ARB_multisample=" + ARB_multisample + ", ARB_texture_env_add=" + ARB_texture_env_add + ", ARB_texture_cube_map=" + ARB_texture_cube_map + ", ARB_texture_compression=" + ARB_texture_compression + ", ARB_texture_border_clamp=" + ARB_texture_border_clamp + ", ARB_point_parameters=" + ARB_point_parameters + ", ARB_vertex_blend=" + ARB_vertex_blend + ", ARB_matrix_palette=" + ARB_matrix_palette + ", ARB_texture_env_combine=" + ARB_texture_env_combine + ", ARB_texture_env_crossbar=" + ARB_texture_env_crossbar + ", ARB_texture_env_dot3=" + ARB_texture_env_dot3 + ", ARB_texture_mirrored_repeat=" + ARB_texture_mirrored_repeat + ", ARB_depth_texture=" + ARB_depth_texture + ", ARB_shadow=" + ARB_shadow + ", ARB_shadow_ambient=" + ARB_shadow_ambient + ", ARB_window_pos=" + ARB_window_pos + ", ARB_vertex_program=" + ARB_vertex_program + ", ARB_fragment_program=" + ARB_fragment_program + ", ARB_vertex_buffer_object=" + ARB_vertex_buffer_object + ", ARB_occlusion_query=" + ARB_occlusion_query + ", ARB_shader_objects=" + ARB_shader_objects + ", ARB_vertex_shader=" + ARB_vertex_shader + ", ARB_fragment_shader=" + ARB_fragment_shader + ", ARB_shading_language_100=" + ARB_shading_language_100 + ", ARB_texture_non_power_of_two=" + ARB_texture_non_power_of_two + ", ARB_point_sprite=" + ARB_point_sprite + ", ARB_fragment_program_shadow=" + ARB_fragment_program_shadow + ", ARB_draw_buffers=" + ARB_draw_buffers + ", ARB_texture_rectangle=" + ARB_texture_rectangle + ", ARB_color_buffer_float=" + ARB_color_buffer_float + ", ARB_half_float_pixel=" + ARB_half_float_pixel + ", ARB_texture_float=" + ARB_texture_float + ", ARB_pixel_buffer_object=" + ARB_pixel_buffer_object + ", ARB_depth_buffer_float=" + ARB_depth_buffer_float + ", ARB_draw_instanced=" + ARB_draw_instanced + ", ARB_framebuffer_object=" + ARB_framebuffer_object + ", ARB_framebuffer_sRGB=" + ARB_framebuffer_sRGB + ", ARB_geometry_shader4=" + ARB_geometry_shader4 + ", ARB_half_float_vertex=" + ARB_half_float_vertex + ", ARB_instanced_arrays=" + ARB_instanced_arrays + ", ARB_map_buffer_range=" + ARB_map_buffer_range + ", ARB_texture_buffer_object=" + ARB_texture_buffer_object + ", ARB_texture_compression_rgtc=" + ARB_texture_compression_rgtc + ", ARB_texture_rg=" + ARB_texture_rg + ", ARB_vertex_array_object=" + ARB_vertex_array_object + ", ARB_uniform_buffer_object=" + ARB_uniform_buffer_object + ", ARB_compatibility=" + ARB_compatibility + ", ARB_copy_buffer=" + ARB_copy_buffer + ", ARB_shader_texture_lod=" + ARB_shader_texture_lod + ", ARB_depth_clamp=" + ARB_depth_clamp + ", ARB_draw_elements_base_vertex=" + ARB_draw_elements_base_vertex + ", ARB_fragment_coord_conventions=" + ARB_fragment_coord_conventions + ", ARB_provoking_vertex=" + ARB_provoking_vertex + ", ARB_seamless_cube_map=" + ARB_seamless_cube_map + ", ARB_sync=" + ARB_sync + ", ARB_texture_multisample=" + ARB_texture_multisample + ", ARB_vertex_array_bgra=" + ARB_vertex_array_bgra + ", ARB_draw_buffers_blend=" + ARB_draw_buffers_blend + ", ARB_sample_shading=" + ARB_sample_shading + ", ARB_texture_cube_map_array=" + ARB_texture_cube_map_array + ", ARB_texture_gather=" + ARB_texture_gather + ", ARB_texture_query_lod=" + ARB_texture_query_lod + ", ARB_shading_language_include=" + ARB_shading_language_include + ", ARB_texture_compression_bptc=" + ARB_texture_compression_bptc + ", ARB_blend_func_extended=" + ARB_blend_func_extended + ", ARB_explicit_attrib_location=" + ARB_explicit_attrib_location + ", ARB_occlusion_query2=" + ARB_occlusion_query2 + ", ARB_sampler_objects=" + ARB_sampler_objects + ", ARB_shader_bit_encoding=" + ARB_shader_bit_encoding + ", ARB_texture_rgb10_a2ui=" + ARB_texture_rgb10_a2ui + ", ARB_texture_swizzle=" + ARB_texture_swizzle + ", ARB_timer_query=" + ARB_timer_query + ", ARB_vertex_type_2_10_10_10_rev=" + ARB_vertex_type_2_10_10_10_rev + ", ARB_draw_indirect=" + ARB_draw_indirect + ", ARB_gpu_shader5=" + ARB_gpu_shader5 + ", ARB_gpu_shader_fp64=" + ARB_gpu_shader_fp64 + ", ARB_shader_subroutine=" + ARB_shader_subroutine + ", ARB_tessellation_shader=" + ARB_tessellation_shader + ", ARB_texture_buffer_object_rgb32=" + ARB_texture_buffer_object_rgb32 + ", ARB_transform_feedback2=" + ARB_transform_feedback2 + ", ARB_transform_feedback3=" + ARB_transform_feedback3 + ", ARB_ES2_compatibility=" + ARB_ES2_compatibility + ", ARB_get_program_binary=" + ARB_get_program_binary + ", ARB_separate_shader_objects=" + ARB_separate_shader_objects + ", ARB_shader_precision=" + ARB_shader_precision + ", ARB_vertex_attrib_64bit=" + ARB_vertex_attrib_64bit + ", ARB_viewport_array=" + ARB_viewport_array + ", ARB_cl_event=" + ARB_cl_event + ", ARB_debug_output=" + ARB_debug_output + ", ARB_robustness=" + ARB_robustness + ", ARB_shader_stencil_export=" + ARB_shader_stencil_export + ", ARB_base_instance=" + ARB_base_instance + ", ARB_shading_language_420pack=" + ARB_shading_language_420pack + ", ARB_transform_feedback_instanced=" + ARB_transform_feedback_instanced + ", ARB_compressed_texture_pixel_storage=" + ARB_compressed_texture_pixel_storage + ", ARB_conservative_depth=" + ARB_conservative_depth + ", ARB_internalformat_query=" + ARB_internalformat_query + ", ARB_map_buffer_alignment=" + ARB_map_buffer_alignment + ", ARB_shader_atomic_counters=" + ARB_shader_atomic_counters + ", ARB_shader_image_load_store=" + ARB_shader_image_load_store + ", ARB_shading_language_packing=" + ARB_shading_language_packing + ", ARB_texture_storage=" + ARB_texture_storage + ", KHR_texture_compression_astc_hdr=" + KHR_texture_compression_astc_hdr + ", KHR_texture_compression_astc_ldr=" + KHR_texture_compression_astc_ldr + ", KHR_debug=" + KHR_debug + ", ARB_arrays_of_arrays=" + ARB_arrays_of_arrays + ", ARB_clear_buffer_object=" + ARB_clear_buffer_object + ", ARB_compute_shader=" + ARB_compute_shader + ", ARB_copy_image=" + ARB_copy_image + ", ARB_texture_view=" + ARB_texture_view + ", ARB_vertex_attrib_binding=" + ARB_vertex_attrib_binding + ", ARB_robustness_isolation=" + ARB_robustness_isolation + ", ARB_ES3_compatibility=" + ARB_ES3_compatibility + ", ARB_explicit_uniform_location=" + ARB_explicit_uniform_location + ", ARB_fragment_layer_viewport=" + ARB_fragment_layer_viewport + ", ARB_framebuffer_no_attachments=" + ARB_framebuffer_no_attachments + ", ARB_internalformat_query2=" + ARB_internalformat_query2 + ", ARB_invalidate_subdata=" + ARB_invalidate_subdata + ", ARB_multi_draw_indirect=" + ARB_multi_draw_indirect + ", ARB_program_interface_query=" + ARB_program_interface_query + ", ARB_robust_buffer_access_behavior=" + ARB_robust_buffer_access_behavior + ", ARB_shader_image_size=" + ARB_shader_image_size + ", ARB_shader_storage_buffer_object=" + ARB_shader_storage_buffer_object + ", ARB_stencil_texturing=" + ARB_stencil_texturing + ", ARB_texture_buffer_range=" + ARB_texture_buffer_range + ", ARB_texture_query_levels=" + ARB_texture_query_levels + ", ARB_texture_storage_multisample=" + ARB_texture_storage_multisample + ", ARB_buffer_storage=" + ARB_buffer_storage + ", ARB_clear_texture=" + ARB_clear_texture + ", ARB_enhanced_layouts=" + ARB_enhanced_layouts + ", ARB_multi_bind=" + ARB_multi_bind + ", ARB_query_buffer_object=" + ARB_query_buffer_object + ", ARB_texture_mirror_clamp_to_edge=" + ARB_texture_mirror_clamp_to_edge + ", ARB_texture_stencil8=" + ARB_texture_stencil8 + ", ARB_vertex_type_10f_11f_11f_rev=" + ARB_vertex_type_10f_11f_11f_rev + ", ARB_bindless_texture=" + ARB_bindless_texture + ", ARB_compute_variable_group_size=" + ARB_compute_variable_group_size + ", ARB_indirect_parameters=" + ARB_indirect_parameters + ", ARB_seamless_cubemap_per_texture=" + ARB_seamless_cubemap_per_texture + ", ARB_shader_draw_parameters=" + ARB_shader_draw_parameters + ", ARB_shader_group_vote=" + ARB_shader_group_vote + ", ARB_sparse_texture=" + ARB_sparse_texture + ", ARB_ES3_1_compatibility=" + ARB_ES3_1_compatibility + ", ARB_clip_control=" + ARB_clip_control + ", ARB_conditional_render_inverted=" + ARB_conditional_render_inverted + ", ARB_cull_distance=" + ARB_cull_distance + ", ARB_derivative_control=" + ARB_derivative_control + ", ARB_direct_state_access=" + ARB_direct_state_access + ", ARB_get_texture_sub_image=" + ARB_get_texture_sub_image + ", ARB_shader_texture_image_samples=" + ARB_shader_texture_image_samples + ", ARB_texture_barrier=" + ARB_texture_barrier + ", KHR_context_flush_control=" + KHR_context_flush_control + ", KHR_robust_buffer_access_behavior=" + KHR_robust_buffer_access_behavior + ", KHR_robustness=" + KHR_robustness + ", ARB_pipeline_statistics_query=" + ARB_pipeline_statistics_query + ", ARB_sparse_buffer=" + ARB_sparse_buffer + ", ARB_transform_feedback_overflow_query=" + ARB_transform_feedback_overflow_query + ", EXT_texture_compression_latc=" + EXT_texture_compression_latc + ", EXT_transform_feedback=" + EXT_transform_feedback + ", EXT_direct_state_access=" + EXT_direct_state_access + ", EXT_texture_filter_anisotropic=" + EXT_texture_filter_anisotropic + ", EXT_texture_compression_s3tc=" + EXT_texture_compression_s3tc + ", EXT_texture_array=" + EXT_texture_array + ", EXT_texture_snorm=" + EXT_texture_snorm + ", EXT_texture_sRGB_decode=" + EXT_texture_sRGB_decode + ", EXT_framebuffer_multisample_blit_scaled=" + EXT_framebuffer_multisample_blit_scaled + ", EXT_shader_integer_mix=" + EXT_shader_integer_mix + ", EXT_shader_image_load_formatted=" + EXT_shader_image_load_formatted + ", EXT_polygon_offset_clamp=" + EXT_polygon_offset_clamp + ", NV_explicit_multisample=" + NV_explicit_multisample + ", NV_shader_buffer_load=" + NV_shader_buffer_load + ", NV_vertex_buffer_unified_memory=" + NV_vertex_buffer_unified_memory + ", NV_shader_buffer_store=" + NV_shader_buffer_store + ", NV_bindless_multi_draw_indirect=" + NV_bindless_multi_draw_indirect + ", NV_blend_equation_advanced=" + NV_blend_equation_advanced + ", NV_deep_texture3D=" + NV_deep_texture3D + ", NV_shader_thread_group=" + NV_shader_thread_group + ", NV_shader_thread_shuffle=" + NV_shader_thread_shuffle + ", NV_shader_atomic_int64=" + NV_shader_atomic_int64 + ", NV_bindless_multi_draw_indirect_count=" + NV_bindless_multi_draw_indirect_count + ", NV_uniform_buffer_unified_memory=" + NV_uniform_buffer_unified_memory + ", ATI_texture_compression_3dc=" + ATI_texture_compression_3dc + ", AMD_depth_clamp_separate=" + AMD_depth_clamp_separate + ", AMD_stencil_operation_extended=" + AMD_stencil_operation_extended + ", AMD_vertex_shader_viewport_index=" + AMD_vertex_shader_viewport_index + ", AMD_vertex_shader_layer=" + AMD_vertex_shader_layer + ", AMD_shader_trinary_minmax=" + AMD_shader_trinary_minmax + ", AMD_interleaved_elements=" + AMD_interleaved_elements + ", AMD_shader_atomic_counter_ops=" + AMD_shader_atomic_counter_ops + ", AMD_occlusion_query_event=" + AMD_occlusion_query_event + ", AMD_shader_stencil_value_export=" + AMD_shader_stencil_value_export + ", AMD_transform_feedback4=" + AMD_transform_feedback4 + ", AMD_gpu_shader_int64=" + AMD_gpu_shader_int64 + ", AMD_gcn_shader=" + AMD_gcn_shader + ", INTEL_map_texture=" + INTEL_map_texture + ", INTEL_fragment_shader_ordering=" + INTEL_fragment_shader_ordering + ", INTEL_performance_query=" + INTEL_performance_query + '}';
    }
}
