/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.gephi.ui.merge;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import java.util.ArrayList;
import org.gephi.project.api.ProjectController;
import org.gephi.project.api.Workspace;
import org.gephi.project.api.WorkspaceInformation;
import org.gephi.project.api.WorkspaceProvider;
import org.openide.util.Lookup;

/**
 *
 * @author Alex
 */
public class MergeWorkspacesEditor extends javax.swing.JPanel {
    
    private final List<Workspace> notCurrentWorkspaces = new ArrayList<>();
    private Workspace currentWorkspace, selectedWorkspace;
    /**
     * Creates new form NewJPanel
     */
    public MergeWorkspacesEditor() {
        initComponents();
    }
    
    private void setSelectedWorkspace(String workspaceName){
        for(Workspace workspace : notCurrentWorkspaces){
            if(workspace.getLookup().lookup(WorkspaceInformation.class).getName().equals(workspaceName)){
                selectedWorkspace = workspace;
                return;
            }
        }
    }
    
    public Workspace getSelectedWorkspace(){
        return selectedWorkspace; 
    }
    
    public Workspace getCurrentWorkspace(){
        return currentWorkspace;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        workspaceList = new javax.swing.JComboBox<>();
        selectText = new javax.swing.JLabel();

        ProjectController projectController = Lookup.getDefault().lookup(ProjectController.class);
        currentWorkspace = projectController.getCurrentWorkspace();

        WorkspaceProvider wsProvider = projectController.getCurrentProject().getLookup().lookup(WorkspaceProvider.class);
        Workspace[] workspaces = wsProvider.getWorkspaces();

        for(Workspace workspace : workspaces){
            if(currentWorkspace != workspace)
            notCurrentWorkspaces.add(workspace);
        }

        selectedWorkspace = notCurrentWorkspaces.get(0);

        String[] wpNames = new String[notCurrentWorkspaces.size()];

        for(int i = 0; i < notCurrentWorkspaces.size(); i++){
            wpNames[i] = notCurrentWorkspaces.get(i).getLookup().lookup(WorkspaceInformation.class).getName();
        }

        workspaceList.setModel(new javax.swing.DefaultComboBoxModel<>(wpNames));

        selectText.setText(org.openide.util.NbBundle.getMessage(MergeWorkspacesEditor.class, "MergeWorkspacesEditor.selectText.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(selectText, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(workspaceList, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(selectText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(workspaceList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        workspaceList.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e){
                setSelectedWorkspace(workspaceList.getSelectedItem().toString());
            }
        });
    }// </editor-fold>//GEN-END:initComponents
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel selectText;
    private javax.swing.JComboBox<String> workspaceList;
    // End of variables declaration//GEN-END:variables
}